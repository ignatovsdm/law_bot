require('dotenv').config();
const fs = require('fs');
const { OpenAI } = require('openai');
const { createClient } = require('@supabase/supabase-js');

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY);

// –®–∞–≥ 1. –ü–æ–ª—É—á–∏—Ç—å —ç–º–±–µ–¥–¥–∏–Ω–≥ –∑–∞–ø—Ä–æ—Å–∞
async function getEmbedding(query) {
  const res = await openai.embeddings.create({
    model: 'text-embedding-3-small',
    input: query
  });
  return res.data[0].embedding;
}

// –®–∞–≥ 2. –ù–∞–π—Ç–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –≤ Supabase
async function searchArticles(queryEmbedding) {
  const { data, error } = await supabase.rpc('match_gk_articles', {
    query_embedding: queryEmbedding,
    match_threshold: 0.78,
    match_count: 10
  });

  if (error) throw new Error(error.message);
  return data;
}

// –®–∞–≥ 3. –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–ø—Ç


function buildPrompt(query, context) {
  const contextText = context.map(c => `–°—Ç–∞—Ç—å—è ${c.article}: ${c.text}`).join('\n\n');

  return `
–¢—ã -–æ–ø—ã—Ç–Ω—ã–π —é—Ä–∏—Å—Ç —Å 20-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º —Ä–∞–±–æ—Ç—ã  –≤ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–º –ø—Ä–∞–≤–µ. –î–∞–π –º–Ω–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ –≤–æ–ø—Ä–æ—Å—É: [—Å—É—Ç—å —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–±–ª–µ–º—ã/—Å–∏—Ç—É–∞—Ü–∏–∏]. –Æ—Ä–∏—Å–¥–∏–∫—Ü–∏—è: [–†–æ—Å—Å–∏—è].
–ü—Ä–æ–≤–µ–¥–∏ –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ (–≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ  –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–º –ø—Ä–∞–≤–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥):
1) –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è —Å–∏—Ç—É–∞—Ü–∏–∏ —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤—É—é—â–µ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞;
2) –∞–Ω–∞–ª–∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–∞–≤–æ–≤—ã—Ö —Ä–∏—Å–∫–æ–≤ –∏ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π.
3) –æ–±–∑–æ—Ä —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–π —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –ø—Ä–µ—Ü–µ–Ω–¥–µ–Ω—Ç–æ–≤;
4) –ø–µ—Ä–µ—á–µ–Ω—å –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–∞–≤–æ–≤—ã—Ö –º–µ—Ö–∞–Ω–∏–∑–º–æ–≤ –∑–∞—â–∏—Ç—ã;
5) –ø–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤–∏–π —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Å—Ä–æ–∫–æ–≤, –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∑–∞—Ç—Ä–∞—Ç.

–ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–µ–¥—É—é—â–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏: [] (–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –≤ –¥–æ–∫–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑). –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –∫–∞—Å–∞–µ—Ç—Å—è –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–≥–æ –ø—Ä–∞–≤–æ - —Ç–æ, –æ–ø–æ–≤–µ—â–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞: "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é —Ç–æ–ª—å–∫–æ –ø–æ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ-–ø—Ä–∞–≤–æ–≤—ã–º –≤–æ–ø—Ä–æ—Å–∞–º, –Ω–æ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏, —è –Ω–∞–¥–µ—é—Å—å, —Å–º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å!"
–¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω –ø–æ–Ω—è—Ç–Ω—ã–º —è–∑—ã–∫–æ–º, –∏—Å–ø–æ–ª—å–∑—É—é —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã, –Ω–æ —Å –ø–æ—è—Å–Ω–µ–Ω–∏–µ–º. –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –±–æ–ª—å—à–µ 5000 —Å–∏–º–≤–æ–ª–æ–≤. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ —Ç–µ–∫—Å—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Å—Ç–∞—Ç—å—é/–∑–∞–∫–æ–Ω –≤ —Ä–∞–º–∫–∞—Ö –∫–æ—Ç–æ—Ä–æ–≥–æ –≤–æ–ø—Ä–æ—Å —Ä–µ—à–∞–µ—Ç—Å—è.
 –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è —Å—É–¥–µ–±–Ω–æ–≥–æ –¥–µ–ª–∞, —Ç–æ –Ω–∞–π–¥–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–µ –¥–µ–ª–∞ –ø–æ [—Ç–∏–ø –¥–µ–ª–∞] –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π, –∫–∞–∫–∏–µ [—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã—Ö –¥–µ–ª] –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã.
–ü–æ–¥–≥–æ—Ç–æ–≤—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ [–ø—Ä–∞–≤–æ–≤–∞—è –ø—Ä–æ–±–ª–µ–º–∞] —Å —É—á—ë—Ç–æ–º [–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏].
–ù–∞–π–¥–∏ –∏ –ø—Ä–∏–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä—ã —É—Å–ø–µ—à–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –ø–æ [–ø—Ä–∞–≤–æ–≤–∞—è –ø—Ä–æ–±–ª–µ–º–∞].
–ö–∞–∫–∏–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —à–∞–≥–∏ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ø—Ä–∏–Ω—è—Ç—å –∫–ª–∏–µ–Ω—Ç –≤ —Å–∏—Ç—É–∞—Ü–∏–∏ [–ø—Ä–∞–≤–æ–≤–∞—è –ø—Ä–æ–±–ª–µ–º–∞]?
–ü–æ–º–æ–≥–∏ –æ–±—ä—è—Å–Ω–∏—Ç—å —Å–ª–æ–∂–Ω—ã–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã –∫–ª–∏–µ–Ω—Ç—É –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ



–ö–æ–Ω—Ç–µ–∫—Å—Ç:
${contextText}

–í–æ–ø—Ä–æ—Å:
${query}

–û—Ç–≤–µ—Ç:
`;
}

// –®–∞–≥ 4. –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å
async function askLawyerAgent(query) {
  const embedding = await getEmbedding(query);
  const articles = await searchArticles(embedding);
  const prompt = buildPrompt(query, articles);

  const completion = await openai.chat.completions.create({
    model: 'gpt-4o',
    messages: [{ role: 'user', content: prompt }],
    temperature: 0.2
  });

  return completion.choices[0].message.content;
}

// –ó–∞–ø—É—Å–∫
(async () => {
  const query = '–ö–∞–∫ –≤–µ—Ä–Ω—É—Ç—å –¥–µ–Ω—å–≥–∏ –∑–∞ –Ω–µ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä?';
  console.log('\n–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n');
  console.log(query);
  const answer = await askLawyerAgent(query);
  console.log('\nüßë‚Äç‚öñÔ∏è –û—Ç–≤–µ—Ç —é—Ä–∏—Å—Ç–∞:\n');
  console.log(answer);
})();